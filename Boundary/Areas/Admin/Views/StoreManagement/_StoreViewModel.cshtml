@model IEnumerable<DataModel.Models.ViewModel.StoreDetailsViewModel>

<table class="table" border="1">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StoreTypeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Comments)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SallerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Place)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Email)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Website)
        </th>
        <th>
            شماره های تماس
        </th>
        <th>
            وضعیت
        </th>
        <th>
            Logo
        </th>
        <th>
            Image
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StoreTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SallerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Place)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitude)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Website)
            </td>

            <td>

                @foreach (var tell in item.Tells)
                {
                    @Html.DisplayFor(modelItem => tell)<br />
                }

            </td>
            <td>
                @Html.EnumDropDownListFor(modelItem => item.StoreStatus, new { onchange = "updateStatus(" + item.Id + ",this.value);" })
            </td>
            <td>
                <img src="~/@item.LogoAddress" height="100" width="125" alt="">
            </td>
            <td>
                <img src="~/@item.ImgAddress" height="100" width="125" alt="">
            </td>
            <td>
                @Html.ActionLink("حذف فروشگاه", "Delete", new { id = item.Id }) |
                @Html.ActionLink("اطلاعات فروشنده", "SellerDetailes", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<script>
    function updateStatus(id, newStatus) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateStatus")',
            dataType: 'json',
            data: { storeCode: id, status: newStatus },
            success: function (result) {
                if (result.Response == true)
                    alert('Success');
                else {
                    alert('Failed');
                }
            },
            error: function (ex) {
                alert('Failed to retrieve items.');
            }
        });
    }
</script>
